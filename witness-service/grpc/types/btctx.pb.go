// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: types/btctx.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BTCTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BTCTransaction) Reset() {
	*x = BTCTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_btctx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BTCTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BTCTransaction) ProtoMessage() {}

func (x *BTCTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_types_btctx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BTCTransaction.ProtoReflect.Descriptor instead.
func (*BTCTransaction) Descriptor() ([]byte, []int) {
	return file_types_btctx_proto_rawDescGZIP(), []int{0}
}

func (x *BTCTransaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TransactionNonces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string        `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Nonces []*MusigNonce `protobuf:"bytes,2,rep,name=nonces,proto3" json:"nonces,omitempty"`
}

func (x *TransactionNonces) Reset() {
	*x = TransactionNonces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_btctx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionNonces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionNonces) ProtoMessage() {}

func (x *TransactionNonces) ProtoReflect() protoreflect.Message {
	mi := &file_types_btctx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionNonces.ProtoReflect.Descriptor instead.
func (*TransactionNonces) Descriptor() ([]byte, []int) {
	return file_types_btctx_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionNonces) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *TransactionNonces) GetNonces() []*MusigNonce {
	if x != nil {
		return x.Nonces
	}
	return nil
}

type MusigNonce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash    string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxinIndex uint64 `protobuf:"varint,2,opt,name=txin_index,json=txinIndex,proto3" json:"txin_index,omitempty"`
	PubNonce  []byte `protobuf:"bytes,3,opt,name=pub_nonce,json=pubNonce,proto3" json:"pub_nonce,omitempty"`
}

func (x *MusigNonce) Reset() {
	*x = MusigNonce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_btctx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusigNonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusigNonce) ProtoMessage() {}

func (x *MusigNonce) ProtoReflect() protoreflect.Message {
	mi := &file_types_btctx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusigNonce.ProtoReflect.Descriptor instead.
func (*MusigNonce) Descriptor() ([]byte, []int) {
	return file_types_btctx_proto_rawDescGZIP(), []int{2}
}

func (x *MusigNonce) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *MusigNonce) GetTxinIndex() uint64 {
	if x != nil {
		return x.TxinIndex
	}
	return 0
}

func (x *MusigNonce) GetPubNonce() []byte {
	if x != nil {
		return x.PubNonce
	}
	return nil
}

type TransactionWithCombinedNonces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx             *BTCTransaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	CombinedNonces [][]byte        `protobuf:"bytes,2,rep,name=combined_nonces,json=combinedNonces,proto3" json:"combined_nonces,omitempty"`
	TransferMap    []*TransferMap  `protobuf:"bytes,3,rep,name=transfer_map,json=transferMap,proto3" json:"transfer_map,omitempty"`
}

func (x *TransactionWithCombinedNonces) Reset() {
	*x = TransactionWithCombinedNonces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_btctx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionWithCombinedNonces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionWithCombinedNonces) ProtoMessage() {}

func (x *TransactionWithCombinedNonces) ProtoReflect() protoreflect.Message {
	mi := &file_types_btctx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionWithCombinedNonces.ProtoReflect.Descriptor instead.
func (*TransactionWithCombinedNonces) Descriptor() ([]byte, []int) {
	return file_types_btctx_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionWithCombinedNonces) GetTx() *BTCTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TransactionWithCombinedNonces) GetCombinedNonces() [][]byte {
	if x != nil {
		return x.CombinedNonces
	}
	return nil
}

func (x *TransactionWithCombinedNonces) GetTransferMap() []*TransferMap {
	if x != nil {
		return x.TransferMap
	}
	return nil
}

type TransferMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vout       uint64 `protobuf:"varint,1,opt,name=vout,proto3" json:"vout,omitempty"`
	TransferId string `protobuf:"bytes,2,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *TransferMap) Reset() {
	*x = TransferMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_btctx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferMap) ProtoMessage() {}

func (x *TransferMap) ProtoReflect() protoreflect.Message {
	mi := &file_types_btctx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferMap.ProtoReflect.Descriptor instead.
func (*TransferMap) Descriptor() ([]byte, []int) {
	return file_types_btctx_proto_rawDescGZIP(), []int{4}
}

func (x *TransferMap) GetVout() uint64 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *TransferMap) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

type TransactionSignatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash     string                   `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Signatures []*MusigPartialSignature `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *TransactionSignatures) Reset() {
	*x = TransactionSignatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_btctx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSignatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSignatures) ProtoMessage() {}

func (x *TransactionSignatures) ProtoReflect() protoreflect.Message {
	mi := &file_types_btctx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSignatures.ProtoReflect.Descriptor instead.
func (*TransactionSignatures) Descriptor() ([]byte, []int) {
	return file_types_btctx_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionSignatures) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *TransactionSignatures) GetSignatures() []*MusigPartialSignature {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type MusigPartialSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash        string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxinIndex     uint64 `protobuf:"varint,2,opt,name=txin_index,json=txinIndex,proto3" json:"txin_index,omitempty"`
	Signature     []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	CombinedNonce []byte `protobuf:"bytes,4,opt,name=combined_nonce,json=combinedNonce,proto3" json:"combined_nonce,omitempty"`
}

func (x *MusigPartialSignature) Reset() {
	*x = MusigPartialSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_btctx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusigPartialSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusigPartialSignature) ProtoMessage() {}

func (x *MusigPartialSignature) ProtoReflect() protoreflect.Message {
	mi := &file_types_btctx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusigPartialSignature.ProtoReflect.Descriptor instead.
func (*MusigPartialSignature) Descriptor() ([]byte, []int) {
	return file_types_btctx_proto_rawDescGZIP(), []int{6}
}

func (x *MusigPartialSignature) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *MusigPartialSignature) GetTxinIndex() uint64 {
	if x != nil {
		return x.TxinIndex
	}
	return 0
}

func (x *MusigPartialSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *MusigPartialSignature) GetCombinedNonce() []byte {
	if x != nil {
		return x.CombinedNonce
	}
	return nil
}

var File_types_btctx_proto protoreflect.FileDescriptor

var file_types_btctx_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x74, 0x63, 0x74, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x42, 0x54,
	0x43, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x57, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x29,
	0x0a, 0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x67, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x52, 0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x0a, 0x4d, 0x75, 0x73,
	0x69, 0x67, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x78, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x78, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x70, 0x75, 0x62, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0xa6, 0x01, 0x0a,
	0x1d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x25,
	0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x42, 0x54, 0x43, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x02, 0x74, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x4d, 0x61, 0x70, 0x22, 0x42, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x15, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x67, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x4d, 0x75,
	0x73, 0x69, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x78, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x74, 0x78, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6f, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x69, 0x6f, 0x54, 0x75,
	0x62, 0x65, 0x2f, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_btctx_proto_rawDescOnce sync.Once
	file_types_btctx_proto_rawDescData = file_types_btctx_proto_rawDesc
)

func file_types_btctx_proto_rawDescGZIP() []byte {
	file_types_btctx_proto_rawDescOnce.Do(func() {
		file_types_btctx_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_btctx_proto_rawDescData)
	})
	return file_types_btctx_proto_rawDescData
}

var file_types_btctx_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_types_btctx_proto_goTypes = []interface{}{
	(*BTCTransaction)(nil),                // 0: types.BTCTransaction
	(*TransactionNonces)(nil),             // 1: types.TransactionNonces
	(*MusigNonce)(nil),                    // 2: types.MusigNonce
	(*TransactionWithCombinedNonces)(nil), // 3: types.TransactionWithCombinedNonces
	(*TransferMap)(nil),                   // 4: types.TransferMap
	(*TransactionSignatures)(nil),         // 5: types.TransactionSignatures
	(*MusigPartialSignature)(nil),         // 6: types.MusigPartialSignature
}
var file_types_btctx_proto_depIdxs = []int32{
	2, // 0: types.TransactionNonces.nonces:type_name -> types.MusigNonce
	0, // 1: types.TransactionWithCombinedNonces.tx:type_name -> types.BTCTransaction
	4, // 2: types.TransactionWithCombinedNonces.transfer_map:type_name -> types.TransferMap
	6, // 3: types.TransactionSignatures.signatures:type_name -> types.MusigPartialSignature
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_types_btctx_proto_init() }
func file_types_btctx_proto_init() {
	if File_types_btctx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_btctx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BTCTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_btctx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionNonces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_btctx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusigNonce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_btctx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionWithCombinedNonces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_btctx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_btctx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSignatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_btctx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusigPartialSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_btctx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_btctx_proto_goTypes,
		DependencyIndexes: file_types_btctx_proto_depIdxs,
		MessageInfos:      file_types_btctx_proto_msgTypes,
	}.Build()
	File_types_btctx_proto = out.File
	file_types_btctx_proto_rawDesc = nil
	file_types_btctx_proto_goTypes = nil
	file_types_btctx_proto_depIdxs = nil
}
